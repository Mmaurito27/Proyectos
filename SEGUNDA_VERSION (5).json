{
  "name": "SEGUNDA VERSION",
  "nodes": [
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "simple": false,
        "filters": {},
        "options": {
          "dataPropertyAttachmentsPrefixName": "attachment_",
          "downloadAttachments": true
        }
      },
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1.2,
      "position": [
        -520,
        180
      ],
      "id": "0827df6e-f158-48df-bcb8-59807d53fabb",
      "name": "Gmail Trigger",
      "credentials": {
        "gmailOAuth2": {
          "id": "I8KoLQ5wqU5FsSIo",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "format": "resolved",
        "options": {}
      },
      "type": "n8n-nodes-base.emailReadImap",
      "typeVersion": 2,
      "position": [
        -520,
        360
      ],
      "id": "254e43bd-bee5-40a0-af0c-a242bf6bb786",
      "name": "buentrabajo (IMAP)",
      "credentials": {
        "imap": {
          "id": "YXgnxX9BzVcyMxNy",
          "name": "IMAP account"
        }
      }
    },
    {
      "parameters": {
        "format": "resolved",
        "options": {}
      },
      "type": "n8n-nodes-base.emailReadImap",
      "typeVersion": 2,
      "position": [
        -520,
        520
      ],
      "id": "5c828581-aab6-4d15-8452-bf379ed823e7",
      "name": "rrhh3 (IMAP)",
      "credentials": {
        "imap": {
          "id": "YXgnxX9BzVcyMxNy",
          "name": "IMAP account"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "for (const item of items) {\n  if (item.binary?.['attachment_0']) {\n    item.binary['data'] = item.binary['attachment_0'];\n  }\n}\nreturn items;"
      },
      "id": "3c7290a9-59d2-43bf-8367-e30b722eabec",
      "name": "Mover binario1",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        380,
        420
      ]
    },
    {
      "parameters": {
        "functionCode": "return items.filter(item => item.binary && item.binary.attachment_0 && ['application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'].includes(item.binary.attachment_0.mimeType));"
      },
      "id": "c3114764-8ec0-41de-b330-91b584e982af",
      "name": "Filtrar y Normalizar Binario2",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        140,
        420
      ]
    },
    {
      "parameters": {
        "functionCode": "for (const item of items) {\n  item.json.timestamp = new Date().toISOString();\n}\nreturn items;"
      },
      "id": "a6b758c6-f012-4bbc-aa96-ce42e22986d2",
      "name": "Agregar Timestamp",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        -320,
        180
      ]
    },
    {
      "parameters": {
        "numberInputs": 3
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        -80,
        380
      ],
      "id": "f6e24d95-83ff-4a62-a46e-82906edbaa78",
      "name": "Merge"
    },
    {
      "parameters": {
        "jsCode": "return items.filter(item => item.binary && Object.values(item.binary).some(bin => ['application/pdf','application/msword','application/vnd.openxmlformats-officedocument.wordprocessingml.document'].includes(bin.mimeType)));"
      },
      "name": "Filtrar Archivos",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        580,
        440
      ],
      "id": "e22d8870-20d1-457c-8530-4cfc3a375c29"
    },
    {
      "parameters": {
        "jsCode": "for (const item of items) {\n  const key = Object.keys(item.binary)[0];\n  item.binary.data = item.binary[key];\n}\nreturn items;"
      },
      "name": "Normalizar Binario",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        780,
        440
      ],
      "id": "af6a6196-4988-472d-86b5-51a6f5ace9a7"
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  // si no existe data, pero sí attachment_0, lo copia\n  if (!item.binary?.data && item.binary?.['attachment_0']) {\n    item.binary.data = item.binary['attachment_0'];\n  }\n  return item;\n});"
      },
      "name": "Code Normalizar data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1800,
        500
      ],
      "id": "7ca64431-db9e-4814-9cd1-43965b9233cd"
    },
    {
      "parameters": {
        "jsCode": "return items.filter(item => item.binary && Object.values(item.binary).some(bin => ['application/pdf','application/msword','application/vnd.openxmlformats-officedocument.wordprocessingml.document'].includes(bin.mimeType)));"
      },
      "name": "Filtrar Archivos1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1020,
        440
      ],
      "id": "6352b028-998d-4165-bcd1-b30d9babcf30"
    },
    {
      "parameters": {
        "jsCode": "for (const item of items) {\n  const key = Object.keys(item.binary)[0];\n  item.binary.data = item.binary[key];\n}\nreturn items;"
      },
      "name": "Normalizar Binario1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1180,
        440
      ],
      "id": "6e2cddd2-9486-41cd-990b-01d27584482b"
    },
    {
      "parameters": {
        "jsCode": "const MAX_SIZE = 3 * 1024 * 1024; // 3MB\nconst ALLOWED_MIME_TYPES = [\n  'application/pdf',\n  'application/msword',\n  'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n];\n\nreturn items.filter(item => {\n  if (!item.binary) return false;\n\n  const bin = item.binary.data || item.binary['attachment_0'];\n  if (!bin) return false;\n\n  const fileSize = parseInt(bin.fileSize);\n  const mimeType = bin.mimeType?.toLowerCase();\n\n  return (\n    !isNaN(fileSize) &&\n    fileSize > 0 &&\n    fileSize <= MAX_SIZE &&\n    typeof mimeType === 'string' &&\n    ALLOWED_MIME_TYPES.includes(mimeType)\n  );\n});\n"
      },
      "name": "Validar Tipo y Tamaño1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1320,
        520
      ],
      "id": "ee0b7430-3387-4121-80bc-d0378c2f7fab",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "jsCode": "const SAFE_PATTERN = /^[a-zA-Z0-9_\\-\\.]{1,100}\\.(pdf|docx?|DOCX?)$/;\n\nreturn items.filter(item => {\n  const bin = item.binary?.data || item.binary?.['attachment_0'];\n\n  return (\n    bin &&\n    typeof bin.fileName === 'string' &&\n    SAFE_PATTERN.test(bin.fileName)\n  );\n});"
      },
      "name": "Validar Nombre1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1480,
        520
      ],
      "id": "39e9cea6-b0d7-47e1-add0-c4fa210c29c3",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "jsCode": "const EXTENSION_WHITELIST = ['pdf', 'doc', 'docx'];\nfunction getExtension(filename) {\n  return filename.split('.').pop().toLowerCase();\n}\nfunction hasMultipleExtensions(filename) {\n  const matches = filename.match(/\\./g);\n  return matches && matches.length > 1;\n}\nreturn items.filter(item => {\n  const bin = item.binary?.data || item.binary?.['attachment_0'];\n  if (!bin || typeof bin.fileName !== 'string') return false;\n  const ext = getExtension(bin.fileName);\n  return EXTENSION_WHITELIST.includes(ext) && !hasMultipleExtensions(bin.fileName);\n});"
      },
      "name": "Validar Doble Extensión1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1640,
        520
      ],
      "id": "83874faf-26b0-4e21-9a32-bb7de85196d6"
    },
    {
      "parameters": {
        "fileName": "=C:/Users/sistemas1/Desktop/CV CENTRAL/PENDIENTES/{{$binary.data.fileName}}",
        "options": {}
      },
      "name": "Guardar PDF1",
      "type": "n8n-nodes-base.writeBinaryFile",
      "typeVersion": 1,
      "position": [
        2520,
        400
      ],
      "id": "f514d0fc-debe-48c3-b2ef-31f4ca5b14d5"
    },
    {
      "parameters": {
        "jsCode": "const SUSPICIOUS_STRINGS = [\n  '<html', '<script', '<iframe', 'onload=', 'onerror=',\n  'javascript:', 'vbscript:', 'data:text/html',\n  '<?php', '<form', '<input', '<embed', '<object',\n  'shell_exec', 'cmd.exe', 'powershell', 'subprocess',\n  'os.system', 'eval(', 'exec(', 'base64,', '0x3c7363726970743e', // \"<script>\" hex\n  '.bat', '.cmd', '.exe', '.dll', '.vbs',\n  'union select', '--', 'or 1=1', 'drop table', 'insert into',\n  'xp_cmdshell', 'load_file', 'information_schema',\n  '%3Cscript', '%253Cscript' // <script> URL y doble codificado\n];\n\nreturn items.filter(item => {\n  const bin = item.binary?.data;\n  if (!bin || !bin.data) return false;\n\n  const content = Buffer.from(bin.data, 'base64').toString('utf8').toLowerCase();\n\n  const suspiciousMatch = SUSPICIOUS_STRINGS.find(tag =>\n    content.includes(tag)\n  );\n\n  if (suspiciousMatch) {\n    item.json.blockedReason = `Detected: ${suspiciousMatch}`;\n    return false;\n  }\n\n  return true;\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1980,
        480
      ],
      "id": "5ea8c908-3743-4280-a371-6f15139a4324",
      "name": "SUSPICIOUS_STRINGS"
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ !$json.blockedReason }}",
              "value2": true
            }
          ]
        }
      },
      "id": "02ef6e6a-cac7-4271-b3a5-fc805f720c45",
      "name": "¿Está limpio?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2300,
        440
      ]
    },
    {
      "parameters": {
        "fileName": "=={{ $binary.logFile.fileName }}",
        "dataPropertyName": "logFile",
        "options": {
          "append": false
        }
      },
      "id": "1125db9e-ce13-43bd-9b89-63368dabd090",
      "name": "Guardar LOG",
      "type": "n8n-nodes-base.writeBinaryFile",
      "typeVersion": 1,
      "position": [
        3040,
        580
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "functionCode": "items[0].binary.file = items[0].binary.data;\nreturn items;"
      },
      "id": "718285ff-55bd-4afc-8ba5-b774f6e36cbb",
      "name": "Set Binario",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        2160,
        440
      ]
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  const contenido = {\n    reason: item.json.blockedReason || \"❌ Rechazado sin razón clara\",\n    file: item.binary?.data?.fileName || \"Sin nombre\"\n  };\n\n  const buffer = Buffer.from(JSON.stringify(contenido, null, 2), 'utf8');\n  item.json.logMessageB64 = buffer.toString('base64');\n  item.json.logFileName = item.json.logFileName || 'log_rechazo.json';\n\n  return item;\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2680,
        600
      ],
      "id": "7e858c83-8f04-4dfd-8e02-2d778821c4be",
      "name": "Code"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "logMessageB64",
        "binaryPropertyName": "logFile",
        "options": {}
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        2840,
        600
      ],
      "id": "97fbde42-7c65-45ba-87da-bb06e111b08e",
      "name": "Convert to File"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "logFileName",
              "value": "={{ $binary.data.fileName.replace(/\\.[^/.]+$/, '') + '_RECHAZADO.json' }}"
            },
            {
              "name": "blockedReason",
              "value": "={{ $json.blockedReason || '❌ Rechazado por validación desconocida – revisar cadena de filtros' }}"
            }
          ]
        },
        "options": {}
      },
      "id": "fc9d1100-116a-4155-916a-038fc73bb86e",
      "name": "SET Log Rechazo1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        2480,
        600
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "Gmail Trigger": {
      "main": [
        [
          {
            "node": "Agregar Timestamp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agregar Timestamp": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "buentrabajo (IMAP)": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Mover binario1": {
      "main": [
        [
          {
            "node": "Filtrar Archivos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filtrar y Normalizar Binario2": {
      "main": [
        [
          {
            "node": "Mover binario1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "rrhh3 (IMAP)": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Filtrar y Normalizar Binario2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filtrar Archivos": {
      "main": [
        [
          {
            "node": "Normalizar Binario",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Normalizar Binario": {
      "main": [
        [
          {
            "node": "Filtrar Archivos1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code Normalizar data": {
      "main": [
        [
          {
            "node": "SUSPICIOUS_STRINGS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filtrar Archivos1": {
      "main": [
        [
          {
            "node": "Normalizar Binario1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Normalizar Binario1": {
      "main": [
        [
          {
            "node": "Validar Tipo y Tamaño1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validar Tipo y Tamaño1": {
      "main": [
        [
          {
            "node": "Validar Nombre1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validar Nombre1": {
      "main": [
        [
          {
            "node": "Validar Doble Extensión1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validar Doble Extensión1": {
      "main": [
        [
          {
            "node": "Code Normalizar data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SUSPICIOUS_STRINGS": {
      "main": [
        [
          {
            "node": "Set Binario",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "¿Está limpio?": {
      "main": [
        [
          {
            "node": "Guardar PDF1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SET Log Rechazo1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Binario": {
      "main": [
        [
          {
            "node": "¿Está limpio?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Guardar LOG": {
      "main": [
        []
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "Guardar LOG",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SET Log Rechazo1": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "a0c04cd4-898b-4360-921e-21c798bfe5b8",
  "meta": {
    "instanceId": "84f44db5bd3dc4edcdb8bb60547fbf0816264437984a9cbfa6a5c62fc72959da"
  },
  "id": "ZzhrhvsxYnT8cMTx",
  "tags": []
}